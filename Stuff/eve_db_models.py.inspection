# This is an auto-generated Django model module.
# You'll have to do the following manually to clean this up:
#   * Rearrange models' order
#   * Make sure each model has one field with primary_key=True
#   * Make sure each ForeignKey has `on_delete` set to the desired behavior.
#   * Remove `managed = False` lines if you wish to allow Django to create, modify, and delete the table
# Feel free to rename the models, but don't rename db_table values or field names.
from __future__ import unicode_literals

from django.db import models


class Agtagenttypes(models.Model):
    agenttypeid = models.BigIntegerField(db_column='agentTypeID', unique=True)  # Field name made lowercase.
    agenttype = models.TextField(db_column='agentType', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'agtAgentTypes'


class Agtagents(models.Model):
    agentid = models.BigIntegerField(db_column='agentID', unique=True)  # Field name made lowercase.
    divisionid = models.SmallIntegerField(db_column='divisionID', blank=True, null=True)  # Field name made lowercase.
    corporationid = models.BigIntegerField(db_column='corporationID', blank=True, null=True)  # Field name made lowercase.
    locationid = models.BigIntegerField(db_column='locationID', blank=True, null=True)  # Field name made lowercase.
    level = models.SmallIntegerField(blank=True, null=True)
    quality = models.SmallIntegerField(blank=True, null=True)
    agenttypeid = models.BigIntegerField(db_column='agentTypeID', blank=True, null=True)  # Field name made lowercase.
    islocator = models.NullBooleanField(db_column='isLocator')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'agtAgents'


class Agtresearchagents(models.Model):
    agentid = models.BigIntegerField(db_column='agentID')  # Field name made lowercase.
    typeid = models.BigIntegerField(db_column='typeID')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'agtResearchAgents'
        unique_together = (('agentid', 'typeid'),)


class Certcerts(models.Model):
    certid = models.BigIntegerField(db_column='certID', unique=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    groupid = models.BigIntegerField(db_column='groupID', blank=True, null=True)  # Field name made lowercase.
    name = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'certCerts'


class Certmasteries(models.Model):
    typeid = models.BigIntegerField(db_column='typeID', blank=True, null=True)  # Field name made lowercase.
    masterylevel = models.BigIntegerField(db_column='masteryLevel', blank=True, null=True)  # Field name made lowercase.
    certid = models.BigIntegerField(db_column='certID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'certMasteries'


class Certskills(models.Model):
    certid = models.BigIntegerField(db_column='certID', blank=True, null=True)  # Field name made lowercase.
    skillid = models.BigIntegerField(db_column='skillID', blank=True, null=True)  # Field name made lowercase.
    certlevelint = models.BigIntegerField(db_column='certLevelInt', blank=True, null=True)  # Field name made lowercase.
    skilllevel = models.BigIntegerField(db_column='skillLevel', blank=True, null=True)  # Field name made lowercase.
    certleveltext = models.TextField(db_column='certLevelText', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'certSkills'


class Chrancestries(models.Model):
    ancestryid = models.SmallIntegerField(db_column='ancestryID', unique=True)  # Field name made lowercase.
    ancestryname = models.TextField(db_column='ancestryName', blank=True, null=True)  # Field name made lowercase.
    bloodlineid = models.SmallIntegerField(db_column='bloodlineID', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    perception = models.SmallIntegerField(blank=True, null=True)
    willpower = models.SmallIntegerField(blank=True, null=True)
    charisma = models.SmallIntegerField(blank=True, null=True)
    memory = models.SmallIntegerField(blank=True, null=True)
    intelligence = models.SmallIntegerField(blank=True, null=True)
    iconid = models.BigIntegerField(db_column='iconID', blank=True, null=True)  # Field name made lowercase.
    shortdescription = models.TextField(db_column='shortDescription', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'chrAncestries'


class Chrattributes(models.Model):
    attributeid = models.SmallIntegerField(db_column='attributeID', unique=True)  # Field name made lowercase.
    attributename = models.TextField(db_column='attributeName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    iconid = models.BigIntegerField(db_column='iconID', blank=True, null=True)  # Field name made lowercase.
    shortdescription = models.TextField(db_column='shortDescription', blank=True, null=True)  # Field name made lowercase.
    notes = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'chrAttributes'


class Chrbloodlines(models.Model):
    bloodlineid = models.SmallIntegerField(db_column='bloodlineID', unique=True)  # Field name made lowercase.
    bloodlinename = models.TextField(db_column='bloodlineName', blank=True, null=True)  # Field name made lowercase.
    raceid = models.SmallIntegerField(db_column='raceID', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    maledescription = models.TextField(db_column='maleDescription', blank=True, null=True)  # Field name made lowercase.
    femaledescription = models.TextField(db_column='femaleDescription', blank=True, null=True)  # Field name made lowercase.
    shiptypeid = models.BigIntegerField(db_column='shipTypeID', blank=True, null=True)  # Field name made lowercase.
    corporationid = models.BigIntegerField(db_column='corporationID', blank=True, null=True)  # Field name made lowercase.
    perception = models.SmallIntegerField(blank=True, null=True)
    willpower = models.SmallIntegerField(blank=True, null=True)
    charisma = models.SmallIntegerField(blank=True, null=True)
    memory = models.SmallIntegerField(blank=True, null=True)
    intelligence = models.SmallIntegerField(blank=True, null=True)
    iconid = models.BigIntegerField(db_column='iconID', blank=True, null=True)  # Field name made lowercase.
    shortdescription = models.TextField(db_column='shortDescription', blank=True, null=True)  # Field name made lowercase.
    shortmaledescription = models.TextField(db_column='shortMaleDescription', blank=True, null=True)  # Field name made lowercase.
    shortfemaledescription = models.TextField(db_column='shortFemaleDescription', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'chrBloodlines'


class Chrfactions(models.Model):
    factionid = models.BigIntegerField(db_column='factionID', unique=True)  # Field name made lowercase.
    factionname = models.TextField(db_column='factionName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    raceids = models.BigIntegerField(db_column='raceIDs', blank=True, null=True)  # Field name made lowercase.
    solarsystemid = models.BigIntegerField(db_column='solarSystemID', blank=True, null=True)  # Field name made lowercase.
    corporationid = models.BigIntegerField(db_column='corporationID', blank=True, null=True)  # Field name made lowercase.
    sizefactor = models.FloatField(db_column='sizeFactor', blank=True, null=True)  # Field name made lowercase.
    stationcount = models.SmallIntegerField(db_column='stationCount', blank=True, null=True)  # Field name made lowercase.
    stationsystemcount = models.SmallIntegerField(db_column='stationSystemCount', blank=True, null=True)  # Field name made lowercase.
    militiacorporationid = models.BigIntegerField(db_column='militiaCorporationID', blank=True, null=True)  # Field name made lowercase.
    iconid = models.BigIntegerField(db_column='iconID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'chrFactions'


class Chrraces(models.Model):
    raceid = models.SmallIntegerField(db_column='raceID', unique=True)  # Field name made lowercase.
    racename = models.TextField(db_column='raceName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    iconid = models.BigIntegerField(db_column='iconID', blank=True, null=True)  # Field name made lowercase.
    shortdescription = models.TextField(db_column='shortDescription', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'chrRaces'


class Crpactivities(models.Model):
    activityid = models.SmallIntegerField(db_column='activityID', unique=True)  # Field name made lowercase.
    activityname = models.TextField(db_column='activityName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'crpActivities'


class Crpnpccorporationdivisions(models.Model):
    corporationid = models.BigIntegerField(db_column='corporationID')  # Field name made lowercase.
    divisionid = models.SmallIntegerField(db_column='divisionID')  # Field name made lowercase.
    size = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'crpNPCCorporationDivisions'
        unique_together = (('corporationid', 'divisionid'),)


class Crpnpccorporationresearchfields(models.Model):
    skillid = models.BigIntegerField(db_column='skillID')  # Field name made lowercase.
    corporationid = models.BigIntegerField(db_column='corporationID')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'crpNPCCorporationResearchFields'
        unique_together = (('skillid', 'corporationid'),)


class Crpnpccorporationtrades(models.Model):
    corporationid = models.BigIntegerField(db_column='corporationID')  # Field name made lowercase.
    typeid = models.BigIntegerField(db_column='typeID')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'crpNPCCorporationTrades'
        unique_together = (('corporationid', 'typeid'),)


class Crpnpccorporations(models.Model):
    corporationid = models.BigIntegerField(db_column='corporationID', unique=True)  # Field name made lowercase.
    size = models.CharField(max_length=1, blank=True, null=True)
    extent = models.CharField(max_length=1, blank=True, null=True)
    solarsystemid = models.BigIntegerField(db_column='solarSystemID', blank=True, null=True)  # Field name made lowercase.
    investorid1 = models.BigIntegerField(db_column='investorID1', blank=True, null=True)  # Field name made lowercase.
    investorshares1 = models.SmallIntegerField(db_column='investorShares1', blank=True, null=True)  # Field name made lowercase.
    investorid2 = models.BigIntegerField(db_column='investorID2', blank=True, null=True)  # Field name made lowercase.
    investorshares2 = models.SmallIntegerField(db_column='investorShares2', blank=True, null=True)  # Field name made lowercase.
    investorid3 = models.BigIntegerField(db_column='investorID3', blank=True, null=True)  # Field name made lowercase.
    investorshares3 = models.SmallIntegerField(db_column='investorShares3', blank=True, null=True)  # Field name made lowercase.
    investorid4 = models.BigIntegerField(db_column='investorID4', blank=True, null=True)  # Field name made lowercase.
    investorshares4 = models.SmallIntegerField(db_column='investorShares4', blank=True, null=True)  # Field name made lowercase.
    friendid = models.BigIntegerField(db_column='friendID', blank=True, null=True)  # Field name made lowercase.
    enemyid = models.BigIntegerField(db_column='enemyID', blank=True, null=True)  # Field name made lowercase.
    publicshares = models.BigIntegerField(db_column='publicShares', blank=True, null=True)  # Field name made lowercase.
    initialprice = models.BigIntegerField(db_column='initialPrice', blank=True, null=True)  # Field name made lowercase.
    minsecurity = models.FloatField(db_column='minSecurity', blank=True, null=True)  # Field name made lowercase.
    scattered = models.NullBooleanField()
    fringe = models.SmallIntegerField(blank=True, null=True)
    corridor = models.SmallIntegerField(blank=True, null=True)
    hub = models.SmallIntegerField(blank=True, null=True)
    border = models.SmallIntegerField(blank=True, null=True)
    factionid = models.BigIntegerField(db_column='factionID', blank=True, null=True)  # Field name made lowercase.
    sizefactor = models.FloatField(db_column='sizeFactor', blank=True, null=True)  # Field name made lowercase.
    stationcount = models.SmallIntegerField(db_column='stationCount', blank=True, null=True)  # Field name made lowercase.
    stationsystemcount = models.SmallIntegerField(db_column='stationSystemCount', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    iconid = models.BigIntegerField(db_column='iconID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'crpNPCCorporations'


class Crpnpcdivisions(models.Model):
    divisionid = models.SmallIntegerField(db_column='divisionID', unique=True)  # Field name made lowercase.
    divisionname = models.TextField(db_column='divisionName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    leadertype = models.TextField(db_column='leaderType', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'crpNPCDivisions'


class Dgmattributecategories(models.Model):
    categoryid = models.SmallIntegerField(db_column='categoryID', unique=True)  # Field name made lowercase.
    categoryname = models.TextField(db_column='categoryName', blank=True, null=True)  # Field name made lowercase.
    categorydescription = models.TextField(db_column='categoryDescription', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'dgmAttributeCategories'


class Dgmattributetypes(models.Model):
    attributeid = models.SmallIntegerField(db_column='attributeID', unique=True)  # Field name made lowercase.
    attributename = models.TextField(db_column='attributeName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    iconid = models.BigIntegerField(db_column='iconID', blank=True, null=True)  # Field name made lowercase.
    defaultvalue = models.FloatField(db_column='defaultValue', blank=True, null=True)  # Field name made lowercase.
    published = models.NullBooleanField()
    displayname = models.TextField(db_column='displayName', blank=True, null=True)  # Field name made lowercase.
    unitid = models.SmallIntegerField(db_column='unitID', blank=True, null=True)  # Field name made lowercase.
    stackable = models.NullBooleanField()
    highisgood = models.NullBooleanField(db_column='highIsGood')  # Field name made lowercase.
    categoryid = models.SmallIntegerField(db_column='categoryID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'dgmAttributeTypes'


class Dgmeffects(models.Model):
    effectid = models.SmallIntegerField(db_column='effectID', unique=True)  # Field name made lowercase.
    effectname = models.TextField(db_column='effectName', blank=True, null=True)  # Field name made lowercase.
    effectcategory = models.SmallIntegerField(db_column='effectCategory', blank=True, null=True)  # Field name made lowercase.
    preexpression = models.BigIntegerField(db_column='preExpression', blank=True, null=True)  # Field name made lowercase.
    postexpression = models.BigIntegerField(db_column='postExpression', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    guid = models.TextField(blank=True, null=True)
    iconid = models.BigIntegerField(db_column='iconID', blank=True, null=True)  # Field name made lowercase.
    isoffensive = models.NullBooleanField(db_column='isOffensive')  # Field name made lowercase.
    isassistance = models.NullBooleanField(db_column='isAssistance')  # Field name made lowercase.
    durationattributeid = models.SmallIntegerField(db_column='durationAttributeID', blank=True, null=True)  # Field name made lowercase.
    trackingspeedattributeid = models.SmallIntegerField(db_column='trackingSpeedAttributeID', blank=True, null=True)  # Field name made lowercase.
    dischargeattributeid = models.SmallIntegerField(db_column='dischargeAttributeID', blank=True, null=True)  # Field name made lowercase.
    rangeattributeid = models.SmallIntegerField(db_column='rangeAttributeID', blank=True, null=True)  # Field name made lowercase.
    falloffattributeid = models.SmallIntegerField(db_column='falloffAttributeID', blank=True, null=True)  # Field name made lowercase.
    disallowautorepeat = models.NullBooleanField(db_column='disallowAutoRepeat')  # Field name made lowercase.
    published = models.NullBooleanField()
    displayname = models.TextField(db_column='displayName', blank=True, null=True)  # Field name made lowercase.
    iswarpsafe = models.NullBooleanField(db_column='isWarpSafe')  # Field name made lowercase.
    rangechance = models.NullBooleanField(db_column='rangeChance')  # Field name made lowercase.
    electronicchance = models.NullBooleanField(db_column='electronicChance')  # Field name made lowercase.
    propulsionchance = models.NullBooleanField(db_column='propulsionChance')  # Field name made lowercase.
    distribution = models.SmallIntegerField(blank=True, null=True)
    sfxname = models.TextField(db_column='sfxName', blank=True, null=True)  # Field name made lowercase.
    npcusagechanceattributeid = models.SmallIntegerField(db_column='npcUsageChanceAttributeID', blank=True, null=True)  # Field name made lowercase.
    npcactivationchanceattributeid = models.SmallIntegerField(db_column='npcActivationChanceAttributeID', blank=True, null=True)  # Field name made lowercase.
    fittingusagechanceattributeid = models.SmallIntegerField(db_column='fittingUsageChanceAttributeID', blank=True, null=True)  # Field name made lowercase.
    modifierinfo = models.TextField(db_column='modifierInfo', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'dgmEffects'


class Dgmexpressions(models.Model):
    expressionid = models.BigIntegerField(db_column='expressionID', unique=True)  # Field name made lowercase.
    operandid = models.BigIntegerField(db_column='operandID', blank=True, null=True)  # Field name made lowercase.
    arg1 = models.BigIntegerField(blank=True, null=True)
    arg2 = models.BigIntegerField(blank=True, null=True)
    expressionvalue = models.TextField(db_column='expressionValue', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    expressionname = models.TextField(db_column='expressionName', blank=True, null=True)  # Field name made lowercase.
    expressiontypeid = models.BigIntegerField(db_column='expressionTypeID', blank=True, null=True)  # Field name made lowercase.
    expressiongroupid = models.SmallIntegerField(db_column='expressionGroupID', blank=True, null=True)  # Field name made lowercase.
    expressionattributeid = models.SmallIntegerField(db_column='expressionAttributeID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'dgmExpressions'


class Dgmtypeattributes(models.Model):
    typeid = models.BigIntegerField(db_column='typeID')  # Field name made lowercase.
    attributeid = models.SmallIntegerField(db_column='attributeID')  # Field name made lowercase.
    valueint = models.BigIntegerField(db_column='valueInt', blank=True, null=True)  # Field name made lowercase.
    valuefloat = models.FloatField(db_column='valueFloat', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'dgmTypeAttributes'
        unique_together = (('typeid', 'attributeid'),)


class Dgmtypeeffects(models.Model):
    typeid = models.BigIntegerField(db_column='typeID')  # Field name made lowercase.
    effectid = models.SmallIntegerField(db_column='effectID')  # Field name made lowercase.
    isdefault = models.NullBooleanField(db_column='isDefault')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'dgmTypeEffects'
        unique_together = (('typeid', 'effectid'),)


class Evegraphics(models.Model):
    graphicid = models.BigIntegerField(db_column='graphicID', unique=True)  # Field name made lowercase.
    soffactionname = models.TextField(db_column='sofFactionName', blank=True, null=True)  # Field name made lowercase.
    graphicfile = models.TextField(db_column='graphicFile', blank=True, null=True)  # Field name made lowercase.
    sofhullname = models.TextField(db_column='sofHullName', blank=True, null=True)  # Field name made lowercase.
    sofracename = models.TextField(db_column='sofRaceName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eveGraphics'


class Eveicons(models.Model):
    iconid = models.BigIntegerField(db_column='iconID', unique=True)  # Field name made lowercase.
    iconfile = models.TextField(db_column='iconFile', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eveIcons'


class Eveunits(models.Model):
    unitid = models.SmallIntegerField(db_column='unitID', unique=True)  # Field name made lowercase.
    unitname = models.TextField(db_column='unitName', blank=True, null=True)  # Field name made lowercase.
    displayname = models.TextField(db_column='displayName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'eveUnits'


class Industryactivity(models.Model):
    typeid = models.BigIntegerField(db_column='typeID')  # Field name made lowercase.
    activityid = models.BigIntegerField(db_column='activityID')  # Field name made lowercase.
    time = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'industryActivity'
        unique_together = (('typeid', 'activityid'),)


class Industryactivitymaterials(models.Model):
    typeid = models.BigIntegerField(db_column='typeID', blank=True, null=True)  # Field name made lowercase.
    activityid = models.BigIntegerField(db_column='activityID', blank=True, null=True)  # Field name made lowercase.
    materialtypeid = models.BigIntegerField(db_column='materialTypeID', blank=True, null=True)  # Field name made lowercase.
    quantity = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'industryActivityMaterials'


class Industryactivityprobabilities(models.Model):
    typeid = models.BigIntegerField(db_column='typeID', blank=True, null=True)  # Field name made lowercase.
    activityid = models.BigIntegerField(db_column='activityID', blank=True, null=True)  # Field name made lowercase.
    producttypeid = models.BigIntegerField(db_column='productTypeID', blank=True, null=True)  # Field name made lowercase.
    probability = models.DecimalField(max_digits=3, decimal_places=2, blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'industryActivityProbabilities'


class Industryactivityproducts(models.Model):
    typeid = models.BigIntegerField(db_column='typeID', blank=True, null=True)  # Field name made lowercase.
    activityid = models.BigIntegerField(db_column='activityID', blank=True, null=True)  # Field name made lowercase.
    producttypeid = models.BigIntegerField(db_column='productTypeID', blank=True, null=True)  # Field name made lowercase.
    quantity = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'industryActivityProducts'


class Industryactivityskills(models.Model):
    typeid = models.BigIntegerField(db_column='typeID', blank=True, null=True)  # Field name made lowercase.
    activityid = models.BigIntegerField(db_column='activityID', blank=True, null=True)  # Field name made lowercase.
    skillid = models.BigIntegerField(db_column='skillID', blank=True, null=True)  # Field name made lowercase.
    level = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'industryActivitySkills'


class Industryblueprints(models.Model):
    typeid = models.BigIntegerField(db_column='typeID', unique=True)  # Field name made lowercase.
    maxproductionlimit = models.BigIntegerField(db_column='maxProductionLimit', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'industryBlueprints'


class Invcategories(models.Model):
    categoryid = models.BigIntegerField(db_column='categoryID', unique=True)  # Field name made lowercase.
    categoryname = models.TextField(db_column='categoryName', blank=True, null=True)  # Field name made lowercase.
    iconid = models.BigIntegerField(db_column='iconID', blank=True, null=True)  # Field name made lowercase.
    published = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'invCategories'


class Invcontrabandtypes(models.Model):
    factionid = models.BigIntegerField(db_column='factionID')  # Field name made lowercase.
    typeid = models.BigIntegerField(db_column='typeID')  # Field name made lowercase.
    standingloss = models.FloatField(db_column='standingLoss', blank=True, null=True)  # Field name made lowercase.
    confiscateminsec = models.FloatField(db_column='confiscateMinSec', blank=True, null=True)  # Field name made lowercase.
    finebyvalue = models.FloatField(db_column='fineByValue', blank=True, null=True)  # Field name made lowercase.
    attackminsec = models.FloatField(db_column='attackMinSec', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'invContrabandTypes'
        unique_together = (('factionid', 'typeid'),)


class Invcontroltowerresourcepurposes(models.Model):
    purpose = models.SmallIntegerField(unique=True)
    purposetext = models.TextField(db_column='purposeText', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'invControlTowerResourcePurposes'


class Invcontroltowerresources(models.Model):
    controltowertypeid = models.BigIntegerField(db_column='controlTowerTypeID')  # Field name made lowercase.
    resourcetypeid = models.BigIntegerField(db_column='resourceTypeID')  # Field name made lowercase.
    purpose = models.SmallIntegerField(blank=True, null=True)
    quantity = models.BigIntegerField(blank=True, null=True)
    minsecuritylevel = models.FloatField(db_column='minSecurityLevel', blank=True, null=True)  # Field name made lowercase.
    factionid = models.BigIntegerField(db_column='factionID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'invControlTowerResources'
        unique_together = (('controltowertypeid', 'resourcetypeid'),)


class Invflags(models.Model):
    flagid = models.SmallIntegerField(db_column='flagID', unique=True)  # Field name made lowercase.
    flagname = models.TextField(db_column='flagName', blank=True, null=True)  # Field name made lowercase.
    flagtext = models.TextField(db_column='flagText', blank=True, null=True)  # Field name made lowercase.
    orderid = models.BigIntegerField(db_column='orderID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'invFlags'


class Invgroups(models.Model):
    groupid = models.BigIntegerField(db_column='groupID', unique=True)  # Field name made lowercase.
    categoryid = models.BigIntegerField(db_column='categoryID', blank=True, null=True)  # Field name made lowercase.
    groupname = models.TextField(db_column='groupName', blank=True, null=True)  # Field name made lowercase.
    iconid = models.BigIntegerField(db_column='iconID', blank=True, null=True)  # Field name made lowercase.
    usebaseprice = models.NullBooleanField(db_column='useBasePrice')  # Field name made lowercase.
    anchored = models.NullBooleanField()
    anchorable = models.NullBooleanField()
    fittablenonsingleton = models.NullBooleanField(db_column='fittableNonSingleton')  # Field name made lowercase.
    published = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'invGroups'


class Invitems(models.Model):
    itemid = models.BigIntegerField(db_column='itemID', unique=True)  # Field name made lowercase.
    typeid = models.BigIntegerField(db_column='typeID')  # Field name made lowercase.
    ownerid = models.BigIntegerField(db_column='ownerID')  # Field name made lowercase.
    locationid = models.BigIntegerField(db_column='locationID')  # Field name made lowercase.
    flagid = models.SmallIntegerField(db_column='flagID')  # Field name made lowercase.
    quantity = models.BigIntegerField()

    class Meta:
        managed = False
        db_table = 'invItems'


class Invmarketgroups(models.Model):
    marketgroupid = models.BigIntegerField(db_column='marketGroupID', unique=True)  # Field name made lowercase.
    parentgroupid = models.BigIntegerField(db_column='parentGroupID', blank=True, null=True)  # Field name made lowercase.
    marketgroupname = models.TextField(db_column='marketGroupName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    iconid = models.BigIntegerField(db_column='iconID', blank=True, null=True)  # Field name made lowercase.
    hastypes = models.NullBooleanField(db_column='hasTypes')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'invMarketGroups'


class Invmetagroups(models.Model):
    metagroupid = models.SmallIntegerField(db_column='metaGroupID', unique=True)  # Field name made lowercase.
    metagroupname = models.TextField(db_column='metaGroupName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    iconid = models.BigIntegerField(db_column='iconID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'invMetaGroups'


class Invmetatypes(models.Model):
    typeid = models.BigIntegerField(db_column='typeID', unique=True)  # Field name made lowercase.
    parenttypeid = models.BigIntegerField(db_column='parentTypeID', blank=True, null=True)  # Field name made lowercase.
    metagroupid = models.SmallIntegerField(db_column='metaGroupID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'invMetaTypes'


class Invnames(models.Model):
    itemid = models.BigIntegerField(db_column='itemID', unique=True)  # Field name made lowercase.
    itemname = models.TextField(db_column='itemName')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'invNames'


class Invpositions(models.Model):
    itemid = models.BigIntegerField(db_column='itemID', unique=True)  # Field name made lowercase.
    x = models.FloatField()
    y = models.FloatField()
    z = models.FloatField()
    yaw = models.FloatField(blank=True, null=True)
    pitch = models.FloatField(blank=True, null=True)
    roll = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'invPositions'


class Invtraits(models.Model):
    traitid = models.BigIntegerField(db_column='traitID', unique=True)  # Field name made lowercase.
    typeid = models.BigIntegerField(db_column='typeID', blank=True, null=True)  # Field name made lowercase.
    skillid = models.BigIntegerField(db_column='skillID', blank=True, null=True)  # Field name made lowercase.
    bonus = models.FloatField(blank=True, null=True)
    bonustext = models.TextField(db_column='bonusText', blank=True, null=True)  # Field name made lowercase.
    unitid = models.BigIntegerField(db_column='unitID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'invTraits'


class Invtypematerials(models.Model):
    typeid = models.BigIntegerField(db_column='typeID')  # Field name made lowercase.
    materialtypeid = models.BigIntegerField(db_column='materialTypeID')  # Field name made lowercase.
    quantity = models.BigIntegerField()

    class Meta:
        managed = False
        db_table = 'invTypeMaterials'
        unique_together = (('typeid', 'materialtypeid'),)


class Invtypereactions(models.Model):
    reactiontypeid = models.BigIntegerField(db_column='reactionTypeID')  # Field name made lowercase.
    input = models.BooleanField()
    typeid = models.BigIntegerField(db_column='typeID')  # Field name made lowercase.
    quantity = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'invTypeReactions'
        unique_together = (('reactiontypeid', 'input', 'typeid'),)


class Invtypes(models.Model):
    typeid = models.BigIntegerField(db_column='typeID', unique=True)  # Field name made lowercase.
    groupid = models.BigIntegerField(db_column='groupID', blank=True, null=True)  # Field name made lowercase.
    typename = models.TextField(db_column='typeName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    mass = models.FloatField(blank=True, null=True)
    volume = models.FloatField(blank=True, null=True)
    capacity = models.FloatField(blank=True, null=True)
    portionsize = models.BigIntegerField(db_column='portionSize', blank=True, null=True)  # Field name made lowercase.
    raceid = models.SmallIntegerField(db_column='raceID', blank=True, null=True)  # Field name made lowercase.
    baseprice = models.DecimalField(db_column='basePrice', max_digits=19, decimal_places=4, blank=True, null=True)  # Field name made lowercase.
    published = models.NullBooleanField()
    marketgroupid = models.BigIntegerField(db_column='marketGroupID', blank=True, null=True)  # Field name made lowercase.
    iconid = models.BigIntegerField(db_column='iconID', blank=True, null=True)  # Field name made lowercase.
    soundid = models.BigIntegerField(db_column='soundID', blank=True, null=True)  # Field name made lowercase.
    graphicid = models.BigIntegerField(db_column='graphicID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'invTypes'


class Invuniquenames(models.Model):
    itemid = models.BigIntegerField(db_column='itemID', unique=True)  # Field name made lowercase.
    itemname = models.TextField(db_column='itemName', unique=True)  # Field name made lowercase.
    groupid = models.BigIntegerField(db_column='groupID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'invUniqueNames'


class Mapcelestialstatistics(models.Model):
    celestialid = models.BigIntegerField(db_column='celestialID', unique=True)  # Field name made lowercase.
    temperature = models.FloatField(blank=True, null=True)
    spectralclass = models.TextField(db_column='spectralClass', blank=True, null=True)  # Field name made lowercase.
    luminosity = models.FloatField(blank=True, null=True)
    age = models.FloatField(blank=True, null=True)
    life = models.FloatField(blank=True, null=True)
    orbitradius = models.FloatField(db_column='orbitRadius', blank=True, null=True)  # Field name made lowercase.
    eccentricity = models.FloatField(blank=True, null=True)
    massdust = models.FloatField(db_column='massDust', blank=True, null=True)  # Field name made lowercase.
    massgas = models.FloatField(db_column='massGas', blank=True, null=True)  # Field name made lowercase.
    fragmented = models.BigIntegerField(blank=True, null=True)
    density = models.FloatField(blank=True, null=True)
    surfacegravity = models.FloatField(db_column='surfaceGravity', blank=True, null=True)  # Field name made lowercase.
    escapevelocity = models.FloatField(db_column='escapeVelocity', blank=True, null=True)  # Field name made lowercase.
    orbitperiod = models.FloatField(db_column='orbitPeriod', blank=True, null=True)  # Field name made lowercase.
    rotationrate = models.FloatField(db_column='rotationRate', blank=True, null=True)  # Field name made lowercase.
    locked = models.BigIntegerField(blank=True, null=True)
    pressure = models.BigIntegerField(blank=True, null=True)
    radius = models.BigIntegerField(blank=True, null=True)
    mass = models.BigIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mapCelestialStatistics'


class Mapconstellationjumps(models.Model):
    fromregionid = models.BigIntegerField(db_column='fromRegionID', blank=True, null=True)  # Field name made lowercase.
    fromconstellationid = models.BigIntegerField(db_column='fromConstellationID')  # Field name made lowercase.
    toconstellationid = models.BigIntegerField(db_column='toConstellationID')  # Field name made lowercase.
    toregionid = models.BigIntegerField(db_column='toRegionID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'mapConstellationJumps'
        unique_together = (('fromconstellationid', 'toconstellationid'),)


class Mapconstellations(models.Model):
    regionid = models.BigIntegerField(db_column='regionID', blank=True, null=True)  # Field name made lowercase.
    constellationid = models.BigIntegerField(db_column='constellationID', unique=True)  # Field name made lowercase.
    constellationname = models.TextField(db_column='constellationName', blank=True, null=True)  # Field name made lowercase.
    x = models.FloatField(blank=True, null=True)
    y = models.FloatField(blank=True, null=True)
    z = models.FloatField(blank=True, null=True)
    xmin = models.FloatField(db_column='xMin', blank=True, null=True)  # Field name made lowercase.
    xmax = models.FloatField(db_column='xMax', blank=True, null=True)  # Field name made lowercase.
    ymin = models.FloatField(db_column='yMin', blank=True, null=True)  # Field name made lowercase.
    ymax = models.FloatField(db_column='yMax', blank=True, null=True)  # Field name made lowercase.
    zmin = models.FloatField(db_column='zMin', blank=True, null=True)  # Field name made lowercase.
    zmax = models.FloatField(db_column='zMax', blank=True, null=True)  # Field name made lowercase.
    factionid = models.BigIntegerField(db_column='factionID', blank=True, null=True)  # Field name made lowercase.
    radius = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mapConstellations'


class Mapdenormalize(models.Model):
    itemid = models.BigIntegerField(db_column='itemID', unique=True)  # Field name made lowercase.
    typeid = models.BigIntegerField(db_column='typeID', blank=True, null=True)  # Field name made lowercase.
    groupid = models.BigIntegerField(db_column='groupID', blank=True, null=True)  # Field name made lowercase.
    solarsystemid = models.BigIntegerField(db_column='solarSystemID', blank=True, null=True)  # Field name made lowercase.
    constellationid = models.BigIntegerField(db_column='constellationID', blank=True, null=True)  # Field name made lowercase.
    regionid = models.BigIntegerField(db_column='regionID', blank=True, null=True)  # Field name made lowercase.
    orbitid = models.BigIntegerField(db_column='orbitID', blank=True, null=True)  # Field name made lowercase.
    x = models.FloatField(blank=True, null=True)
    y = models.FloatField(blank=True, null=True)
    z = models.FloatField(blank=True, null=True)
    radius = models.FloatField(blank=True, null=True)
    itemname = models.TextField(db_column='itemName', blank=True, null=True)  # Field name made lowercase.
    security = models.FloatField(blank=True, null=True)
    celestialindex = models.BigIntegerField(db_column='celestialIndex', blank=True, null=True)  # Field name made lowercase.
    orbitindex = models.BigIntegerField(db_column='orbitIndex', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'mapDenormalize'


class Mapjumps(models.Model):
    stargateid = models.BigIntegerField(db_column='stargateID', unique=True)  # Field name made lowercase.
    destinationid = models.BigIntegerField(db_column='destinationID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'mapJumps'


class Maplandmarks(models.Model):
    landmarkid = models.BigIntegerField(db_column='landmarkID', unique=True)  # Field name made lowercase.
    landmarkname = models.TextField(db_column='landmarkName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    locationid = models.BigIntegerField(db_column='locationID', blank=True, null=True)  # Field name made lowercase.
    x = models.FloatField(blank=True, null=True)
    y = models.FloatField(blank=True, null=True)
    z = models.FloatField(blank=True, null=True)
    iconid = models.BigIntegerField(db_column='iconID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'mapLandmarks'


class Maplocationscenes(models.Model):
    locationid = models.BigIntegerField(db_column='locationID', unique=True)  # Field name made lowercase.
    graphicid = models.BigIntegerField(db_column='graphicID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'mapLocationScenes'


class Maplocationwormholeclasses(models.Model):
    locationid = models.BigIntegerField(db_column='locationID', unique=True)  # Field name made lowercase.
    wormholeclassid = models.BigIntegerField(db_column='wormholeClassID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'mapLocationWormholeClasses'


class Mapregionjumps(models.Model):
    fromregionid = models.BigIntegerField(db_column='fromRegionID')  # Field name made lowercase.
    toregionid = models.BigIntegerField(db_column='toRegionID')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'mapRegionJumps'
        unique_together = (('fromregionid', 'toregionid'),)


class Mapregions(models.Model):
    regionid = models.BigIntegerField(db_column='regionID', unique=True)  # Field name made lowercase.
    regionname = models.TextField(db_column='regionName', blank=True, null=True)  # Field name made lowercase.
    x = models.FloatField(blank=True, null=True)
    y = models.FloatField(blank=True, null=True)
    z = models.FloatField(blank=True, null=True)
    xmin = models.FloatField(db_column='xMin', blank=True, null=True)  # Field name made lowercase.
    xmax = models.FloatField(db_column='xMax', blank=True, null=True)  # Field name made lowercase.
    ymin = models.FloatField(db_column='yMin', blank=True, null=True)  # Field name made lowercase.
    ymax = models.FloatField(db_column='yMax', blank=True, null=True)  # Field name made lowercase.
    zmin = models.FloatField(db_column='zMin', blank=True, null=True)  # Field name made lowercase.
    zmax = models.FloatField(db_column='zMax', blank=True, null=True)  # Field name made lowercase.
    factionid = models.BigIntegerField(db_column='factionID', blank=True, null=True)  # Field name made lowercase.
    radius = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mapRegions'


class Mapsolarsystemjumps(models.Model):
    fromregionid = models.BigIntegerField(db_column='fromRegionID', blank=True, null=True)  # Field name made lowercase.
    fromconstellationid = models.BigIntegerField(db_column='fromConstellationID', blank=True, null=True)  # Field name made lowercase.
    fromsolarsystemid = models.BigIntegerField(db_column='fromSolarSystemID')  # Field name made lowercase.
    tosolarsystemid = models.BigIntegerField(db_column='toSolarSystemID')  # Field name made lowercase.
    toconstellationid = models.BigIntegerField(db_column='toConstellationID', blank=True, null=True)  # Field name made lowercase.
    toregionid = models.BigIntegerField(db_column='toRegionID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'mapSolarSystemJumps'
        unique_together = (('fromsolarsystemid', 'tosolarsystemid'),)


class Mapsolarsystems(models.Model):
    regionid = models.BigIntegerField(db_column='regionID', blank=True, null=True)  # Field name made lowercase.
    constellationid = models.BigIntegerField(db_column='constellationID', blank=True, null=True)  # Field name made lowercase.
    solarsystemid = models.BigIntegerField(db_column='solarSystemID', unique=True)  # Field name made lowercase.
    solarsystemname = models.TextField(db_column='solarSystemName', blank=True, null=True)  # Field name made lowercase.
    x = models.FloatField(blank=True, null=True)
    y = models.FloatField(blank=True, null=True)
    z = models.FloatField(blank=True, null=True)
    xmin = models.FloatField(db_column='xMin', blank=True, null=True)  # Field name made lowercase.
    xmax = models.FloatField(db_column='xMax', blank=True, null=True)  # Field name made lowercase.
    ymin = models.FloatField(db_column='yMin', blank=True, null=True)  # Field name made lowercase.
    ymax = models.FloatField(db_column='yMax', blank=True, null=True)  # Field name made lowercase.
    zmin = models.FloatField(db_column='zMin', blank=True, null=True)  # Field name made lowercase.
    zmax = models.FloatField(db_column='zMax', blank=True, null=True)  # Field name made lowercase.
    luminosity = models.FloatField(blank=True, null=True)
    border = models.BigIntegerField(blank=True, null=True)
    fringe = models.BigIntegerField(blank=True, null=True)
    corridor = models.BigIntegerField(blank=True, null=True)
    hub = models.BigIntegerField(blank=True, null=True)
    international = models.BigIntegerField(blank=True, null=True)
    regional = models.BigIntegerField(blank=True, null=True)
    constellation = models.BigIntegerField(blank=True, null=True)
    security = models.FloatField(blank=True, null=True)
    factionid = models.BigIntegerField(db_column='factionID', blank=True, null=True)  # Field name made lowercase.
    radius = models.FloatField(blank=True, null=True)
    suntypeid = models.BigIntegerField(db_column='sunTypeID', blank=True, null=True)  # Field name made lowercase.
    securityclass = models.TextField(db_column='securityClass', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'mapSolarSystems'


class Mapuniverse(models.Model):
    universeid = models.BigIntegerField(db_column='universeID', unique=True)  # Field name made lowercase.
    universename = models.TextField(db_column='universeName', blank=True, null=True)  # Field name made lowercase.
    x = models.FloatField(blank=True, null=True)
    y = models.FloatField(blank=True, null=True)
    z = models.FloatField(blank=True, null=True)
    xmin = models.FloatField(db_column='xMin', blank=True, null=True)  # Field name made lowercase.
    xmax = models.FloatField(db_column='xMax', blank=True, null=True)  # Field name made lowercase.
    ymin = models.FloatField(db_column='yMin', blank=True, null=True)  # Field name made lowercase.
    ymax = models.FloatField(db_column='yMax', blank=True, null=True)  # Field name made lowercase.
    zmin = models.FloatField(db_column='zMin', blank=True, null=True)  # Field name made lowercase.
    zmax = models.FloatField(db_column='zMax', blank=True, null=True)  # Field name made lowercase.
    radius = models.FloatField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'mapUniverse'


class Planetschematics(models.Model):
    schematicid = models.SmallIntegerField(db_column='schematicID', unique=True)  # Field name made lowercase.
    schematicname = models.TextField(db_column='schematicName', blank=True, null=True)  # Field name made lowercase.
    cycletime = models.BigIntegerField(db_column='cycleTime', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'planetSchematics'


class Planetschematicspinmap(models.Model):
    schematicid = models.SmallIntegerField(db_column='schematicID')  # Field name made lowercase.
    pintypeid = models.BigIntegerField(db_column='pinTypeID')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'planetSchematicsPinMap'
        unique_together = (('schematicid', 'pintypeid'),)


class Planetschematicstypemap(models.Model):
    schematicid = models.SmallIntegerField(db_column='schematicID')  # Field name made lowercase.
    typeid = models.BigIntegerField(db_column='typeID')  # Field name made lowercase.
    quantity = models.SmallIntegerField(blank=True, null=True)
    isinput = models.NullBooleanField(db_column='isInput')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'planetSchematicsTypeMap'
        unique_together = (('schematicid', 'typeid'),)


class Ramactivities(models.Model):
    activityid = models.SmallIntegerField(db_column='activityID', unique=True)  # Field name made lowercase.
    activityname = models.TextField(db_column='activityName', blank=True, null=True)  # Field name made lowercase.
    iconno = models.TextField(db_column='iconNo', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    published = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'ramActivities'


class Ramassemblylinestations(models.Model):
    stationid = models.BigIntegerField(db_column='stationID')  # Field name made lowercase.
    assemblylinetypeid = models.SmallIntegerField(db_column='assemblyLineTypeID')  # Field name made lowercase.
    quantity = models.SmallIntegerField(blank=True, null=True)
    stationtypeid = models.BigIntegerField(db_column='stationTypeID', blank=True, null=True)  # Field name made lowercase.
    ownerid = models.BigIntegerField(db_column='ownerID', blank=True, null=True)  # Field name made lowercase.
    solarsystemid = models.BigIntegerField(db_column='solarSystemID', blank=True, null=True)  # Field name made lowercase.
    regionid = models.BigIntegerField(db_column='regionID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'ramAssemblyLineStations'
        unique_together = (('stationid', 'assemblylinetypeid'),)


class Ramassemblylinetypedetailpercategory(models.Model):
    assemblylinetypeid = models.SmallIntegerField(db_column='assemblyLineTypeID')  # Field name made lowercase.
    categoryid = models.BigIntegerField(db_column='categoryID')  # Field name made lowercase.
    timemultiplier = models.FloatField(db_column='timeMultiplier', blank=True, null=True)  # Field name made lowercase.
    materialmultiplier = models.FloatField(db_column='materialMultiplier', blank=True, null=True)  # Field name made lowercase.
    costmultiplier = models.FloatField(db_column='costMultiplier', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'ramAssemblyLineTypeDetailPerCategory'
        unique_together = (('assemblylinetypeid', 'categoryid'),)


class Ramassemblylinetypedetailpergroup(models.Model):
    assemblylinetypeid = models.SmallIntegerField(db_column='assemblyLineTypeID')  # Field name made lowercase.
    groupid = models.BigIntegerField(db_column='groupID')  # Field name made lowercase.
    timemultiplier = models.FloatField(db_column='timeMultiplier', blank=True, null=True)  # Field name made lowercase.
    materialmultiplier = models.FloatField(db_column='materialMultiplier', blank=True, null=True)  # Field name made lowercase.
    costmultiplier = models.FloatField(db_column='costMultiplier', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'ramAssemblyLineTypeDetailPerGroup'
        unique_together = (('assemblylinetypeid', 'groupid'),)


class Ramassemblylinetypes(models.Model):
    assemblylinetypeid = models.SmallIntegerField(db_column='assemblyLineTypeID', unique=True)  # Field name made lowercase.
    assemblylinetypename = models.TextField(db_column='assemblyLineTypeName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    basetimemultiplier = models.FloatField(db_column='baseTimeMultiplier', blank=True, null=True)  # Field name made lowercase.
    basematerialmultiplier = models.FloatField(db_column='baseMaterialMultiplier', blank=True, null=True)  # Field name made lowercase.
    basecostmultiplier = models.FloatField(db_column='baseCostMultiplier', blank=True, null=True)  # Field name made lowercase.
    volume = models.FloatField(blank=True, null=True)
    activityid = models.SmallIntegerField(db_column='activityID', blank=True, null=True)  # Field name made lowercase.
    mincostperhour = models.FloatField(db_column='minCostPerHour', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'ramAssemblyLineTypes'


class Raminstallationtypecontents(models.Model):
    installationtypeid = models.BigIntegerField(db_column='installationTypeID')  # Field name made lowercase.
    assemblylinetypeid = models.SmallIntegerField(db_column='assemblyLineTypeID')  # Field name made lowercase.
    quantity = models.SmallIntegerField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'ramInstallationTypeContents'
        unique_together = (('installationtypeid', 'assemblylinetypeid'),)


class Skinlicense(models.Model):
    licensetypeid = models.BigIntegerField(db_column='licenseTypeID', unique=True)  # Field name made lowercase.
    duration = models.BigIntegerField(blank=True, null=True)
    skinid = models.BigIntegerField(db_column='skinID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'skinLicense'


class Skinmaterials(models.Model):
    skinmaterialid = models.BigIntegerField(db_column='skinMaterialID', unique=True)  # Field name made lowercase.
    displaynameid = models.BigIntegerField(db_column='displayNameID', blank=True, null=True)  # Field name made lowercase.
    materialsetid = models.BigIntegerField(db_column='materialSetID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'skinMaterials'


class Skinship(models.Model):
    skinid = models.BigIntegerField(db_column='skinID', blank=True, null=True)  # Field name made lowercase.
    typeid = models.BigIntegerField(db_column='typeID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'skinShip'


class Skins(models.Model):
    skinid = models.BigIntegerField(db_column='skinID', unique=True)  # Field name made lowercase.
    internalname = models.TextField(db_column='internalName', blank=True, null=True)  # Field name made lowercase.
    skinmaterialid = models.BigIntegerField(db_column='skinMaterialID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'skins'


class Staoperationservices(models.Model):
    operationid = models.SmallIntegerField(db_column='operationID')  # Field name made lowercase.
    serviceid = models.BigIntegerField(db_column='serviceID')  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'staOperationServices'
        unique_together = (('operationid', 'serviceid'),)


class Staoperations(models.Model):
    activityid = models.SmallIntegerField(db_column='activityID', blank=True, null=True)  # Field name made lowercase.
    operationid = models.SmallIntegerField(db_column='operationID', unique=True)  # Field name made lowercase.
    operationname = models.TextField(db_column='operationName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)
    fringe = models.SmallIntegerField(blank=True, null=True)
    corridor = models.SmallIntegerField(blank=True, null=True)
    hub = models.SmallIntegerField(blank=True, null=True)
    border = models.SmallIntegerField(blank=True, null=True)
    ratio = models.SmallIntegerField(blank=True, null=True)
    caldaristationtypeid = models.BigIntegerField(db_column='caldariStationTypeID', blank=True, null=True)  # Field name made lowercase.
    minmatarstationtypeid = models.BigIntegerField(db_column='minmatarStationTypeID', blank=True, null=True)  # Field name made lowercase.
    amarrstationtypeid = models.BigIntegerField(db_column='amarrStationTypeID', blank=True, null=True)  # Field name made lowercase.
    gallentestationtypeid = models.BigIntegerField(db_column='gallenteStationTypeID', blank=True, null=True)  # Field name made lowercase.
    jovestationtypeid = models.BigIntegerField(db_column='joveStationTypeID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'staOperations'


class Staservices(models.Model):
    serviceid = models.BigIntegerField(db_column='serviceID', unique=True)  # Field name made lowercase.
    servicename = models.TextField(db_column='serviceName', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'staServices'


class Stastationtypes(models.Model):
    stationtypeid = models.BigIntegerField(db_column='stationTypeID', unique=True)  # Field name made lowercase.
    dockentryx = models.FloatField(db_column='dockEntryX', blank=True, null=True)  # Field name made lowercase.
    dockentryy = models.FloatField(db_column='dockEntryY', blank=True, null=True)  # Field name made lowercase.
    dockentryz = models.FloatField(db_column='dockEntryZ', blank=True, null=True)  # Field name made lowercase.
    dockorientationx = models.FloatField(db_column='dockOrientationX', blank=True, null=True)  # Field name made lowercase.
    dockorientationy = models.FloatField(db_column='dockOrientationY', blank=True, null=True)  # Field name made lowercase.
    dockorientationz = models.FloatField(db_column='dockOrientationZ', blank=True, null=True)  # Field name made lowercase.
    operationid = models.SmallIntegerField(db_column='operationID', blank=True, null=True)  # Field name made lowercase.
    officeslots = models.SmallIntegerField(db_column='officeSlots', blank=True, null=True)  # Field name made lowercase.
    reprocessingefficiency = models.FloatField(db_column='reprocessingEfficiency', blank=True, null=True)  # Field name made lowercase.
    conquerable = models.NullBooleanField()

    class Meta:
        managed = False
        db_table = 'staStationTypes'


class Stastations(models.Model):
    stationid = models.BigIntegerField(db_column='stationID', unique=True)  # Field name made lowercase.
    security = models.SmallIntegerField(blank=True, null=True)
    dockingcostpervolume = models.FloatField(db_column='dockingCostPerVolume', blank=True, null=True)  # Field name made lowercase.
    maxshipvolumedockable = models.FloatField(db_column='maxShipVolumeDockable', blank=True, null=True)  # Field name made lowercase.
    officerentalcost = models.BigIntegerField(db_column='officeRentalCost', blank=True, null=True)  # Field name made lowercase.
    operationid = models.SmallIntegerField(db_column='operationID', blank=True, null=True)  # Field name made lowercase.
    stationtypeid = models.BigIntegerField(db_column='stationTypeID', blank=True, null=True)  # Field name made lowercase.
    corporationid = models.BigIntegerField(db_column='corporationID', blank=True, null=True)  # Field name made lowercase.
    solarsystemid = models.BigIntegerField(db_column='solarSystemID', blank=True, null=True)  # Field name made lowercase.
    constellationid = models.BigIntegerField(db_column='constellationID', blank=True, null=True)  # Field name made lowercase.
    regionid = models.BigIntegerField(db_column='regionID', blank=True, null=True)  # Field name made lowercase.
    stationname = models.TextField(db_column='stationName', blank=True, null=True)  # Field name made lowercase.
    x = models.FloatField(blank=True, null=True)
    y = models.FloatField(blank=True, null=True)
    z = models.FloatField(blank=True, null=True)
    reprocessingefficiency = models.FloatField(db_column='reprocessingEfficiency', blank=True, null=True)  # Field name made lowercase.
    reprocessingstationstake = models.FloatField(db_column='reprocessingStationsTake', blank=True, null=True)  # Field name made lowercase.
    reprocessinghangarflag = models.SmallIntegerField(db_column='reprocessingHangarFlag', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'staStations'


class Translationtables(models.Model):
    sourcetable = models.TextField(db_column='sourceTable')  # Field name made lowercase.
    destinationtable = models.TextField(db_column='destinationTable', blank=True, null=True)  # Field name made lowercase.
    translatedkey = models.TextField(db_column='translatedKey')  # Field name made lowercase.
    tcgroupid = models.BigIntegerField(db_column='tcGroupID', blank=True, null=True)  # Field name made lowercase.
    tcid = models.BigIntegerField(db_column='tcID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'translationTables'
        unique_together = (('sourcetable', 'translatedkey'),)


class Trntranslationcolumns(models.Model):
    tcgroupid = models.SmallIntegerField(db_column='tcGroupID', blank=True, null=True)  # Field name made lowercase.
    tcid = models.SmallIntegerField(db_column='tcID', unique=True)  # Field name made lowercase.
    tablename = models.TextField(db_column='tableName')  # Field name made lowercase.
    columnname = models.TextField(db_column='columnName')  # Field name made lowercase.
    masterid = models.TextField(db_column='masterID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'trnTranslationColumns'


class Trntranslationlanguages(models.Model):
    numericlanguageid = models.BigIntegerField(db_column='numericLanguageID', unique=True)  # Field name made lowercase.
    languageid = models.TextField(db_column='languageID', blank=True, null=True)  # Field name made lowercase.
    languagename = models.TextField(db_column='languageName', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'trnTranslationLanguages'


class Trntranslations(models.Model):
    tcid = models.SmallIntegerField(db_column='tcID')  # Field name made lowercase.
    keyid = models.BigIntegerField(db_column='keyID')  # Field name made lowercase.
    languageid = models.TextField(db_column='languageID')  # Field name made lowercase.
    text = models.TextField()

    class Meta:
        managed = False
        db_table = 'trnTranslations'


class Warcombatzonesystems(models.Model):
    solarsystemid = models.BigIntegerField(db_column='solarSystemID')  # Field name made lowercase.
    combatzoneid = models.BigIntegerField(db_column='combatZoneID', blank=True, null=True)  # Field name made lowercase.

    class Meta:
        managed = False
        db_table = 'warCombatZoneSystems'


class Warcombatzones(models.Model):
    combatzoneid = models.BigIntegerField(db_column='combatZoneID', unique=True)  # Field name made lowercase.
    combatzonename = models.TextField(db_column='combatZoneName', blank=True, null=True)  # Field name made lowercase.
    factionid = models.BigIntegerField(db_column='factionID', blank=True, null=True)  # Field name made lowercase.
    centersystemid = models.BigIntegerField(db_column='centerSystemID', blank=True, null=True)  # Field name made lowercase.
    description = models.TextField(blank=True, null=True)

    class Meta:
        managed = False
        db_table = 'warCombatZones'
